local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local function GetPlayerRoot(plrlefff)
    local PlayerRootPart = plrlefff.Character:FindFirstChild("HumanoidRootPart") or plrlefff.Character:FindFirstChild("UpperTorso")
    return PlayerRootPart
end

--[[Get Players]]

local plrlel = {}

for i,v in pairs(game:GetService("Players"):GetPlayers()) do
	if v.Name == game.Players.LocalPlayer.Name == false then
    	table.insert(plrlel,v.Name)
	end
end

--[[Gui]]

local Window = Fluent:CreateWindow({
    Title = "F0rtuit0us Hub",
    SubTitle = "Made By TROLL GUI MAKER",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightControl
})

--[[Check Remote]]

if game:GetService("ReplicatedStorage"):FindFirstChild("RE") then 
	workin = true
else workin = false 
	if game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clien1tInf1o") then
		workin = true
	else workin = false 
	end
end

if workin == true then

--[[Defined Remote]]

remoteparent = game:GetService("ReplicatedStorage"):FindFirstChild("RE")
gunsoundremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s")
givecardremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Giv1eAnimatio1nTool1s")
gunremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1n")
changeavatarremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clothe1s")
avatarremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Avata1rOrigina1l")
cleartoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s")
picktoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
carremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r")
nameremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eTex1t")
changesavatarremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Updat1eAvata1r")
horseremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Hors1eRemot1e")

--[[Tabs]]

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    trol = Window:AddTab({ Title = "Troll Functions", Icon = "" }),
    tool = Window:AddTab({ Title = "Tool Functions", Icon = "" }),
    loclal = Window:AddTab({ Title = "LocalPlayer Functions", Icon = "" }),
    tp = Window:AddTab({ Title = "Teleport Functions", Icon = "" }),
    anti = Window:AddTab({ Title = "Anti Functions", Icon = "" }),
    server = Window:AddTab({ Title = "Server Functions", Icon = "" }),
    Setting = Window:AddTab({ Title = "Setting", Icon = "setting" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "Script is loaded",
        SubContent = "Have Funs!",
        Duration = 5
    })

    --[[Main Tab Function]]

    Tabs.Main:AddParagraph({
        Title = "Status",
        Content = "Working!"
    })

    Tabs.Main:AddButton({
        Title = "Copy Discord Invite Link",
        Description = "",
        Callback = function()
            setclipboard("https://discord.gg/s8gGAms7wA")
        end
    })

    --[[Troll Tab Function]]

    Tabs.trol:AddParagraph({
        Title = "OP Troll Function",
        Content = ""
    })

    Tabs.trol:AddButton({
        Title = "Disconnected All",
        Description = "",
        Callback = function()
            Window:Dialog({
                Title = "Script",
                Content = "Are you sure? This function can SHUTDOWN this server",
                Buttons = {
                    {
                        Title = "Confirm",
                        Callback = function()
                            oldcframe = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                            game.workspace:FindFirstChild("Camera"):Destroy()
                            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").WorkspaceCom["001_GiveTools"].FireX.CFrame + Vector3.new(0,-15,0)
                            task.wait(0.2)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                            for i=1, 1350 do task.wait()
                            fireclickdetector(game:GetService("Workspace").WorkspaceCom["001_GiveTools"].FireX.ClickDetector,0)
                            if game:GetService("Players").LocalPlayer.Character:FindFirstChild("FireX") then 
                                game.Players.LocalPlayer.Character.FireX:Destroy()
                            end
                            end
                            wait(0.75)
                            for asd,wef in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                                if wef:IsA("Tool") then
                                    if wef.Name == "FireX" then
                                        wef:Destroy()
                                    end
                                end
                            end
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(99999,-475,99999)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false                        end
                    },
                    {
                        Title = "Cancel",
                        Callback = function()
                            return
                        end
                    }
                }
            })
        end
    })

end


SaveManager:LoadAutoloadConfig()
elseif workin == false then
    local Tabs = {
        Main = Window:AddTab({ Title = "Main", Icon = "" }),
        Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
    }
    
    local Options = Fluent.Options
    
    do
        Fluent:Notify({
            Title = "Notification",
            Content = "Script is loaded",
            SubContent = "SubContent",
            Duration = 5
        })
    
        Tabs.Main:AddParagraph({
            Title = "Paragraph",
            Content = "Status: Patched!"
        })
    
    end
    
    SaveManager:LoadAutoloadConfig()
end
